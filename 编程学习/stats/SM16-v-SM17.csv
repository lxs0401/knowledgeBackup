Date, Element No, Used interval, SM16 Interval (new), SM17 Interval (new), SM17/SM16 Interval ratio, R (SM16), R (SM17)(exp), R (SM17), Grade, Success, abs RM16, abs RM17 (expected), abs RM17 (predicted), abs R-Metric, sqr R-Metric, Title,
May 04 2018 07:13:40,18,13,31,20,0.66,0.863,0.646,0.832,4,1,0.1374,0.3537,0.168,-0.0306,-0.0093,写可读的代码注释不但没能让代码变得可读，反而由于大量的注释充斥在代码中间，让程序变得障眼难读。而且代码的逻辑一旦修改，就会有很多的注释变得过时，需要更新。修改注释是相当大的负担，所以大量的注释。 .
May 05 2018 07:43:20,57,8,17,18,1.05,0.916,0.768,0.856,4,1,0.0844,0.2321,0.1441,-0.0597,-0.0136,3.6.4 检测字符串是否相等. 可以使用equals方法检测两个字符串是否相等。对于表达式：. 如果字符串s与字符串t相等，则返回true；否则，返回false。需要注意，s与t可以是字符串变量，. 也可以是字符串常量。例如，下列表达式是合法的:. 要想检测两个字符串是否相等，而不区分大小写，可以使用equalsIgnoreCase方法。 .
May 06 2018 12:55:16,78,3,8,1,0.13,0.968,0.934,0.917,2,0,0.9684,0.9336,0.9168,0.0516,0.0973,直接关联
May 06 2018 12:55:19,97,3,5,11,2.14,0.969,0.933,0.917,4,1,0.0308,0.0667,0.0832,-0.0524,-0.006,聚合
May 06 2018 12:55:22,89,3,5,11,2.14,0.97,0.933,0.917,4,1,0.0301,0.0667,0.0832,-0.0532,-0.006,关联
May 06 2018 12:55:29,95,3,5,11,2.14,0.971,0.933,0.917,4,1,0.0294,0.0666,0.0832,-0.0538,-0.0061,接口集成
May 06 2018 12:55:33,94,3,5,11,2.14,0.971,0.933,0.917,4,1,0.0288,0.0667,0.0832,-0.0544,-0.0061,继承
May 06 2018 12:55:58,46,14,2,1,0.5,0.52,0.62,0.823,2,0,0.5203,0.6203,0.8231,-0.3027,-0.4067,Math类提供了一些常用的三角函数：. Math.sin. Math.cos. Math.tan. Math.atan. Math.atan2. 还有指数函数以及它的反函数――自然对数：. Math.exp. Math.log. 最后，Java还提供了两个用于表示π和e常量的近似值：. Math.PI. Math.E. 提示：从JDK 5 .
May 06 2018 12:56:06,96,3,7,11,1.52,0.87,0.934,0.917,4,1,0.1299,0.0664,0.0832,0.0466,0.0099,依赖
May 07 2018 07:15:48,78,1,2,4,2.19,0.96,0.923,0.923,4,1,0.0402,0.0774,0.0774,-0.0371,-0.0044,直接关联
May 07 2018 07:15:59,55,10,34,18,0.53,0.697,0.717,0.849,4,1,0.3032,0.2833,0.1511,0.1521,0.0691,[.]. 返回一个新字符串。这个字符串将原始字符串中的所有小写字母改成了大写字母。
May 07 2018 07:16:09,46,1,2,4,2.18,0.964,0.923,0.923,4,1,0.0361,0.0773,0.0773,-0.0412,-0.0047,Math类提供了一些常用的三角函数：. Math.sin. Math.cos. Math.tan. Math.atan. Math.atan2. 还有指数函数以及它的反函数――自然对数：. Math.exp. Math.log. 最后，Java还提供了两个用于表示π和e常量的近似值：. Math.PI. Math.E. 提示：从JDK 5 .
May 08 2018 07:06:10,98,3,5,12,2.49,0.902,0.91,0.917,3,1,0.0977,0.0898,0.0832,0.0145,0.0026,Android中的日志工具类是Log ( android.util.Log )，这个类中提供了如下5 个方法来供我们. 打印日志。. 他们分别是：
May 08 2018 07:06:37,68,9,19,25,1.32,0.886,0.938,0.938,3,1,0.1145,0.0623,0.0623,0.0522,0.0092,? int compareTo(String other). 按照字典顺序，如果字符串位于other之前，返回一个负数；如果字符串位于other之后，. 返回一个正数；如果两个字符串相等，返回0。. ? boolean endsWith(String suffix). 如果字符串以suffix结尾，返回true。. ? boolean .
May 08 2018 07:06:53,51,6,15,16,1.05,0.978,0.959,0.959,4,1,0.0219,0.0414,0.0414,-0.0194,-0.0012,3.6.3 不可变字符串. String类没有提供用于修改字符串的方法。如果希望将greeting的内容修改为“Help!”，不. 能直接地将greeting的最后两个位置的字符修改为‘p’和‘!’。. 如何修改这个字符串呢？在Java中实现这项操作非常容易。首先提取需要的字符，. 然后再拼接上替换的字符串： .
May 08 2018 07:07:04,65,9,23,25,1.09,0.886,0.938,0.938,4,1,0.1145,0.0623,0.0623,0.0522,0.0092,? int compareTo(String other). 按照字典顺序，如果字符串位于other之前，返回一个负数；如果字符串位于other之后，. 返回一个正数；如果两个字符串相等，返回0。. [.]. 如果字符串以suffix结尾，返回true。. ? boolean equals(Object other) .
May 08 2018 07:07:14,33,16,53,23,0.44,0.624,0.583,0.819,4,1,0.3764,0.4174,0.1809,0.1955,0.1089,（通常，将运算符放在赋值号的左侧，如*= 或 %=。）. 注释：可移植性是Java语言的设计目标之一。无论在哪个虚拟机上运行，同一运算应该得. 到同样的结果。对于浮点数的算术运算，实现这样的可移植性是相当困难的。double类型. 使用64位存储一个double数值，而有些处理器使用80位浮点寄存器。这些寄存器增加了 .
May 08 2018 07:07:52,16,17,57,24,0.43,0.646,0.562,0.815,4,1,0.3535,0.4383,0.1846,0.1689,0.0909,写可读的代码注释不但没能让代码变得可读，反而由于大量的注释充斥在代码中间，让程序变得障眼难读。而且代码的逻辑一旦修改，就会有很多的注释变得过时，需要更新。修改注释是相当大的负担，所以大量的注释。 .
May 08 2018 07:11:27,62,11,3,1,0.33,0.723,0.692,0.843,2,0,0.7232,0.6918,0.8427,-0.1195,-0.1871,[.]. 按照字典顺序，如果字符串位于other之前，返回一个负数；如果字符串位于other之后，. 返回一个正数；如果两个字符串相等，返回0。
May 08 2018 07:11:35,57,3,19,18,0.93,0.987,0.981,0.981,4,1,0.0131,0.0187,0.0187,-0.0056,-0.0002,3.6.4 检测字符串是否相等. 可以使用equals方法检测两个字符串是否相等。对于表达式：. 如果字符串s与字符串t相等，则返回true；否则，返回false。需要注意，s与t可以是字符串变量，. 也可以是字符串常量。例如，下列表达式是合法的:. 要想检测两个字符串是否相等，而不区分大小写，可以使用equalsIgnoreCase方法。 .
May 08 2018 07:11:53,54,11,42,19,0.44,0.736,0.692,0.843,4,1,0.2641,0.308,0.1573,0.1068,0.045,? String toUpperCase( ). [.]
May 08 2018 07:12:05,71,8,24,22,0.9,0.949,0.946,0.946,4,1,0.0507,0.054,0.054,-0.0033,-0.0004,? String replace(CharSequence oldString_ CharSequence newString). [.]
May 08 2018 07:12:22,63,11,3,1,0.33,0.705,0.692,0.843,2,0,0.705,0.6918,0.8427,-0.1377,-0.2131,? int compareTo(String other). [.]返回一个正数；如果两个字符串相等，返回0。. ? boolean endsWith(String suffix). 如果字符串以suffix结尾，返回true。. ? boolean equals(Object other). 如果字符串与other相等，返回true。. ? .
May 08 2018 07:12:37,74,11,31,19,0.6,0.718,0.692,0.843,4,1,0.2818,0.308,0.1573,0.1245,0.0547,[.]. 返回一个新字符串。这个字符串将原始字符串中的所有大写字母改成了小写字母。
May 08 2018 07:12:56,53,11,31,18,0.59,0.729,0.692,0.837,4,1,0.2705,0.3084,0.1629,0.1076,0.0466,3.6.4 检测字符串是否相等. 可以使用equals方法检测两个字符串是否相等。对于表达式：. [.]. 如果字符串s与字符串t相等，则返回true；否则，返回false。需要注意，s与t可以是字符串变量，. 也可以是字符串常量。例如，下列表达式是合法的 .
May 08 2018 07:13:16,26,16,51,23,0.46,0.655,0.582,0.819,4,1,0.345,0.4176,0.1809,0.1641,0.0863,3.4.2 常量. 在Java中，利用关键字final声明常量。例如：. 关键字final表示这个变量只能被赋值一次。习惯上，常. 量名使用大写。. 在Java中，经常希望某个常量可以在一个类中的多个方法中使用，通常将这些常量称为类. 常量。可以使用[.]设置一个类常量。下面是使用类常量的示例：. 36 第 3 章. Java 基本的程序设计结构 .
May 08 2018 07:13:31,77,11,3,1,0.33,0.721,0.692,0.843,1,0,0.7214,0.692,0.8427,-0.1213,-0.1897,? String trim( ). [.]
May 08 2018 07:13:58,69,11,45,19,0.41,0.732,0.692,0.843,4,1,0.2685,0.3082,0.1573,0.1112,0.0473,? int compareTo(String other). 按照字典顺序，如果字符串位于other之前，返回一个负数；如果字符串位于other之后，. 返回一个正数；如果两个字符串相等，返回0。. ? boolean endsWith(String suffix). 如果字符串以suffix结尾，返回true。. ? boolean .
May 08 2018 07:14:06,73,11,44,19,0.42,0.741,0.692,0.843,4,1,0.2595,0.308,0.1573,0.1022,0.0426,? String replace(CharSequence oldString_ CharSequence newString). 返回一个新字符串。这个字符串用newString代替原始字符串中所有的oldString。可以用. String或StringBuilder对象作为CharSequence参数。. ? boolean .
May 08 2018 07:14:12,75,11,47,19,0.4,0.749,0.692,0.843,4,1,0.2513,0.308,0.1573,0.0939,0.0384,? String toLowerCase( ). [.]
May 08 2018 07:14:23,67,11,40,19,0.46,0.756,0.692,0.843,4,1,0.2438,0.3082,0.1573,0.0864,0.0347,? int compareTo(String other). 按照字典顺序，如果字符串位于other之前，返回一个负数；如果字符串位于other之后，. 返回一个正数；如果两个字符串相等，返回0。. ? boolean endsWith(String suffix). 如果字符串以suffix结尾，返回true。. ? boolean .
May 08 2018 07:14:32,55,1,18,22,1.23,0.998,0.995,0.995,4,1,0.0018,0.005,0.005,-0.0031,0.0000,[.]. 返回一个新字符串。这个字符串将原始字符串中的所有小写字母改成了大写字母。
May 08 2018 07:15:18,25,16,3,1,0.33,0.637,0.582,0.819,2,0,0.6371,0.5824,0.8191,-0.182,-0.265,3.4.2 常量. 在Java中，利用关键字final声明常量。例如：. 关键字final表示这个变量只能被赋值一次。习惯上，常. 量名使用大写。. 在Java中，经常希望某个常量可以[.]，通常将这些常量称为类. 常量。可以使用关键字static final设置一个类常量。下面是使用类常量的示例：. 36 第 3 章. Java .
May 08 2018 07:15:29,50,11,42,18,0.43,0.74,0.691,0.837,4,1,0.2598,0.3086,0.1629,0.0968,0.0409,3.6.3 不可变字符串. String类没有提供用于修改字符串的方法。如果希望将greeting的内容修改为“Help!”，不. 能直接地将greeting的最后两个位置的字符修改为‘p’和‘!’。. 如何修改这个字符串呢？在Java中实现这项操作非常容易。首先提取需要的字符，. 然后再拼接上替换的字符串：. [.] .
May 08 2018 07:15:37,72,11,47,19,0.4,0.747,0.692,0.843,4,1,0.2534,0.3081,0.1573,0.0961,0.0395,? String replace(CharSequence oldString_ CharSequence newString). 返回一个新字符串。这个字符串用newString代替原始字符串中所有的oldString。可以用. String或StringBuilder对象作为CharSequence参数。. [.] .
May 08 2018 07:15:43,66,11,30,19,0.62,0.753,0.692,0.843,4,1,0.2474,0.3082,0.1573,0.0901,0.0364,? int compareTo(String other). 按照字典顺序，如果字符串位于other之前，返回一个负数；如果字符串位于other之后，. 返回一个正数；如果两个字符串相等，返回0。. ? boolean endsWith(String suffix). 如果字符串以suffix结尾，返回true。. [.] .
May 08 2018 07:15:55,76,11,35,19,0.53,0.758,0.692,0.843,4,1,0.2416,0.308,0.1573,0.0843,0.0336,[.]. 返回一个新字符串。这个字符串将删除了原始字符串头部和尾部的空格。
May 08 2018 07:17:05,56,11,30,18,0.61,0.764,0.692,0.837,4,1,0.2363,0.3085,0.1629,0.0733,0.0293,3.6.4 检测字符串是否相等. 可以使用equals方法检测两个字符串是否相等。对于表达式：. 如果字符串s与字符串t相等，则返回true；否则，返回false。需要注意，s与t可以是字符串变量，. 也可以是字符串常量。例如，下列表达式是合法的:. 要想检测两个字符串是否相等，而不区分大小写，可以使用equalsIgnoreCase方法。. [ .
May 08 2018 07:17:16,70,8,17,22,1.28,0.949,0.946,0.946,3,1,0.0507,0.0541,0.0541,-0.0034,-0.0004,[.]. 返回一个新字符串。这个字符串用newString代替原始字符串中所有的oldString。可以用. String或StringBuilder对象作为CharSequence参数。
May 08 2018 07:17:29,6,16,48,23,0.49,0.691,0.582,0.819,4,1,0.309,0.4176,0.1809,0.1281,0.0627,3.4.2 常量. 在Java中，利用关键字final声明常量。例如：. 关键字final表示[.]。一旦被赋值之后，就不能够再更改了。习惯上，常. 量名使用大写。. 在Java中，经常希望某个常量可以在一个类中的多个方法中使用，通常将这些常量称为类. 常量。可以使用关键字static final设置一个类常量。下面是使用类常量的示例：. 36 第 .
May 08 2018 07:17:34,23,6,34,16,0.46,0.978,0.959,0.959,4,1,0.0219,0.0414,0.0414,-0.0195,-0.0012,? int compareTo(String other). 按照字典顺序，如果字符串位于other之前，返回一个负数；如果字符串位于other之后，. 返回一个正数；如果两个字符串相等，返回0。. ? boolean endsWith(String suffix). [.]. ? boolean equals(Object other) .
May 08 2018 07:17:39,89,2,11,9,0.85,0.971,0.978,0.978,4,1,0.0288,0.0219,0.0219,0.0069,0.0004,关联
May 08 2018 07:18:18,20,17,53,24,0.46,0.689,0.562,0.815,4,1,0.3107,0.4384,0.1846,0.1261,0.0625,写可读的代码注释不但没能让代码变得可读，反而由于大量的注释充斥在代码中间，让程序变得障眼难读。而且代码的逻辑一旦修改，就会有很多的注释变得过时，需要更新。修改注释是相当大的负担，所以大量的注释。 .
May 08 2018 07:18:28,17,17,49,24,0.5,0.702,0.562,0.815,4,1,0.2979,0.4384,0.1846,0.1133,0.0546,写可读的代码注释不但没能让代码变得可读，反而由于大量的注释充斥在代码中间，让程序变得障眼难读。而且代码的逻辑一旦修改，就会有很多的注释变得过时，需要更新。修改注释是相当大的负担，所以大量的注释。 .
May 08 2018 07:18:38,18,4,21,30,1.42,0.991,0.985,0.985,4,1,0.009,0.0146,0.0146,-0.0056,-0.0001,写可读的代码注释不但没能让代码变得可读，反而由于大量的注释充斥在代码中间，让程序变得障眼难读。而且代码的逻辑一旦修改，就会有很多的注释变得过时，需要更新。修改注释是相当大的负担，所以大量的注释。 .
May 08 2018 07:19:23,14,17,59,24,0.41,0.714,0.561,0.815,4,1,0.286,0.4386,0.1846,0.1014,0.0477,写模块化的代码有些人吵着闹着要让程序“模块化”，结果他们的做法是把代码分部到多个文件和目录里面，然后把这些目录或者文件叫做“module”。他们甚至把这些目录分放在不同的VCS r .
May 08 2018 07:19:36,10,17,48,24,0.51,0.725,0.561,0.815,4,1,0.2752,0.4386,0.1846,0.0906,0.0416,写模块化的代码有些人吵着闹着要让程序“模块化”，结果他们的做法是把代码分部到多个文件和目录里面，然后把这些目录或者文件叫做“module”。他们甚至把这些目录分放在不同的VCS r .
May 08 2018 07:20:42,19,17,5,1,0.2,0.701,0.562,0.815,2,0,0.7013,0.5615,0.8154,-0.114,-0.173,写可读的代码注释不但没能让代码变得可读，反而由于大量的注释充斥在代码中间，让程序变得障眼难读。而且代码的逻辑一旦修改，就会有很多的注释变得过时，需要更新。修改注释是相当大的负担，所以大量的注释。 .
May 08 2018 07:21:21,21,17,61,24,0.4,0.712,0.562,0.815,4,1,0.288,0.4385,0.1846,0.1034,0.0489,写可读的代码注释不但没能让代码变得可读，反而由于大量的注释充斥在代码中间，让程序变得障眼难读。而且代码的逻辑一旦修改，就会有很多的注释变得过时，需要更新。修改注释是相当大的负担，所以大量的注释。 .
May 08 2018 07:21:34,13,6,28,25,0.89,0.99,0.975,0.975,4,1,0.01,0.0253,0.0253,-0.0152,-0.0005,写模块化的代码有些人吵着闹着要让程序“模块化”，结果他们的做法是把代码分部到多个文件和目录里面，然后把这些目录或者文件叫做“module”。他们甚至把这些目录分放在不同的VCS r .
May 08 2018 07:21:39,12,17,49,24,0.5,0.722,0.561,0.815,4,1,0.2782,0.4387,0.1846,0.0936,0.0433,写模块化的代码有些人吵着闹着要让程序“模块化”，结果他们的做法是把代码分部到多个文件和目录里面，然后把这些目录或者文件叫做“module”。他们甚至把这些目录分放在不同的VCS r .
May 08 2018 07:21:46,22,6,28,25,0.89,0.99,0.975,0.975,4,1,0.01,0.0253,0.0253,-0.0152,-0.0005,写可读的代码注释不但没能让代码变得可读，反而由于大量的注释充斥在代码中间，让程序变得障眼难读。而且代码的逻辑一旦修改，就会有很多的注释变得过时，需要更新。修改注释是相当大的负担，所以大量的注释。 .
May 08 2018 07:21:58,44,16,46,23,0.51,0.744,0.583,0.819,4,1,0.2558,0.4171,0.1809,0.0749,0.0327,Math类提供了一些常用的三角函数：. Math.sin. Math.cos. Math.tan. Math.atan. Math.atan2. 还有指数函数以及它的反函数――自然对数：. Math.exp. Math.log. 最后，Java还提供了两个用于表示π和e常量的近似值：. Math.PI. Math.E. 提示：从JDK 5 .
May 08 2018 07:22:09,46,1,4,5,1.34,0.957,0.976,0.976,4,1,0.043,0.0239,0.0239,0.019,0.0013,Math类提供了一些常用的三角函数：. Math.sin. Math.cos. Math.tan. Math.atan. Math.atan2. 还有指数函数以及它的反函数――自然对数：. Math.exp. Math.log. 最后，Java还提供了两个用于表示π和e常量的近似值：. Math.PI. Math.E. 提示：从JDK 5 .
May 08 2018 07:22:18,43,6,30,22,0.75,0.989,0.972,0.972,4,1,0.011,0.0282,0.0282,-0.0172,-0.0007,Math类提供了一些常用的三角函数：. Math.sin. Math.cos. Math.tan. Math.atan. Math.atan2. 还有指数函数以及它的反函数――自然对数：. Math.exp. Math.log. 最后，Java还提供了两个用于表示π和e常量的近似值：. [.]. 提示：从JDK 5 .
May 08 2018 07:23:05,45,16,5,1,0.2,0.72,0.583,0.819,1,0,0.7201,0.5829,0.8191,-0.099,-0.1523,Math类提供了一些常用的三角函数：. Math.sin. Math.cos. Math.tan. Math.atan. Math.atan2. 还有指数函数以及它的反函数――自然对数：. Math.exp. Math.log. 最后，Java还提供了两个用于表示π和e常量的近似值：. Math.PI. Math.E. 提示：从JDK 5 .
May 08 2018 07:23:15,41,16,48,23,0.49,0.729,0.583,0.819,4,1,0.2708,0.4171,0.1809,0.0899,0.0406,Math类提供了一些常用的三角函数：. [.]. 还有指数函数以及它的反函数――自然对数：. Math.exp. Math.log. 最后，Java还提供了两个用于表示π和e常量的近似值：. Math.PI. Math.E. 提示：从JDK 5.0开始，不必在数学方法名和常量名前添加前缀“Math.”，而只要在源文. 件的顶部加上下列内容就可以了。 .
May 08 2018 07:23:35,42,10,5,1,0.2,0.97,0.932,0.932,2,0,0.9697,0.9323,0.9323,0.0374,0.0711,Math类提供了一些常用的三角函数：. Math.sin. Math.cos. Math.tan. Math.atan. Math.atan2. 还有指数函数以及它的反函数――自然对数：. [.]. 最后，Java还提供了两个用于表示π和e常量的近似值：. Math.PI. Math.E. 提示：从JDK 5 .
May 08 2018 07:23:45,39,16,48,23,0.49,0.737,0.583,0.819,4,1,0.2627,0.4172,0.1809,0.0818,0.0363,3.5.4 数学函数与常量. 在Math类中，包含了各种各样的数学函数。在编写不同类别的程序时，可能需要的函数也. 不同。. 要想计算一个数值的平方根，可以使用sqrt方法：. [.]. 注释：println方法和sqrt方法存在微小的差异。println方法操作一个定义在System类中的. System .
May 08 2018 07:23:57,79,11,33,19,0.56,0.814,0.692,0.843,4,1,0.1864,0.308,0.1573,0.0291,0.01,3.9 大数值. 如果基本的整数和浮点数精度不能够满足需求，那么可以使用java.math包中的两个很有用. 的类：BigInteger和BigDecimal。这两个类可以处理包含任意长度数字序列的数值。[.]类实现了任意精度的整数运算，BigDecimal实现了任意精度的浮点数运算。. 使用静态的valueOf方法可以将普通的数值转换为大数值： .
May 08 2018 07:24:24,93,3,5,1,0.2,0.944,0.91,0.917,2,0,0.9442,0.9103,0.9168,0.0274,0.0511,2.2.4在活动中使用 Toast. Toast是Android系统提供的一种非常好的提醒方式，在程序中可以使用它将一些短小的信息. 通知给用户，这些信息会在一段时间后自动消失，并且不会占用任何屏幕空间，我们现在就尝试. 一下如何在活动中使用Toast。. 首先需要定义一个弹出Toast的触发点，正好界面上有个按钮，那我们就让点击这个按钮的 .
May 08 2018 07:24:27,97,2,11,9,0.85,0.971,0.978,0.978,4,1,0.0288,0.022,0.022,0.0069,0.0003,聚合
May 08 2018 07:24:57,105,3,12,12,1.04,0.944,0.91,0.917,3,1,0.0557,0.0899,0.0832,-0.0275,-0.0038,2.2.4在活动中使用 Toast. Toast是Android系统提供的一种非常好的提醒方式，在程序中可以使用它将一些短小的信息. 通知给用户，这些信息会在一段时间后自动消失，并且不会占用任何屏幕空间，我们现在就尝试. 一下如何在活动中使用Toast。. 首先需要定义一个弹出Toast的触发点，正好界面上有个按钮，那我们就让点击这个按钮的 .
May 08 2018 07:25:01,106,3,33,12,0.38,0.944,0.91,0.917,4,1,0.0556,0.0899,0.0832,-0.0276,-0.0038,2.2.4在活动中使用 Toast. Toast是Android系统提供的一种非常好的提醒方式，在程序中可以使用它将一些短小的信息. 通知给用户，这些信息会在一段时间后自动消失，并且不会占用任何屏幕空间，我们现在就尝试. 一下如何在活动中使用Toast。. 首先需要定义一个弹出Toast的触发点，正好界面上有个按钮，那我们就让点击这个按钮的 .
May 08 2018 07:25:29,82,11,42,19,0.44,0.813,0.692,0.843,3,1,0.1868,0.308,0.1573,0.0295,0.0101,3.9 大数值. 如果基本的整数和浮点数精度不能够满足需求，那么可以使用java.math包中的两个很有用. 的类：BigInteger和BigDecimal。这两个类可以处理包含任意长度数字序列的数值。BigInteger. 类实现了任意精度的整数运算，BigDecimal实现了任意精度的浮点数运算。 .
May 08 2018 07:26:02,96,2,11,9,0.85,0.979,0.978,0.978,4,1,0.0211,0.022,0.022,-0.0009,0.0000,依赖
May 08 2018 07:26:42,78,1,4,1,0.25,0.951,0.976,0.976,2,0,0.9511,0.976,0.976,-0.0249,-0.0481,直接关联
May 08 2018 07:26:48,95,2,11,9,0.85,0.971,0.978,0.978,4,1,0.0288,0.022,0.022,0.0068,0.0003,接口集成
May 08 2018 07:27:10,81,11,5,1,0.2,0.802,0.692,0.843,1,0,0.8023,0.692,0.8427,-0.0404,-0.0664,3.9 大数值. 如果基本的整数和浮点数精度不能够满足需求，那么可以使用java.math包中的两个很有用. 的类：BigInteger和BigDecimal。这两个类可以处理包含任意长度数字序列的数值。BigInteger. 类实现了任意精度的整数运算，BigDecimal实现了任意精度的浮点数运算。 .
May 08 2018 07:27:36,94,2,5,1,0.2,0.971,0.978,0.978,2,0,0.9712,0.978,0.978,-0.0068,-0.0133,继承
May 08 2018 07:27:43,29,16,48,23,0.49,0.733,0.582,0.819,4,1,0.2668,0.4177,0.1809,0.0859,0.0385,（通常，将运算符放在赋值号的左侧，如*= 或 %=。）. 注释：可移植性是Java语言的设计目标之一。[.]对于浮点数的算术运算，实现这样的可移植性是相当困难的。double类型. 使用64位存储一个double数值，而有些处理器使用80位浮点寄存器。这些寄存器增加了. 中间过程的计算精度。例如，下列运算：. 很多Intel处理器计算x * .
May 08 2018 07:28:10,35,16,54,23,0.43,0.74,0.582,0.819,4,1,0.26,0.4176,0.1809,0.0791,0.0349,（通常，将运算符放在赋值号的左侧，如*= 或 %=。）. 注释：可移植性是Java语言的设计目标之一。无论在哪个虚拟机上运行，同一运算应该得. 到同样的结果。对于浮点数的算术运算，实现这样的可移植性是相当困难的。double类型. 使用64位存储一个double数值，而有些处理器使用80位浮点寄存器。这些寄存器增加了 .
May 08 2018 07:28:38,32,16,50,23,0.47,0.746,0.582,0.819,4,1,0.2536,0.4177,0.1809,0.0727,0.0316,（通常，将运算符放在赋值号的左侧，如*= 或 %=。）. 注释：可移植性是Java语言的设计目标之一。无论在哪个虚拟机上运行，同一运算应该得. 到同样的结果。对于浮点数的算术运算，实现这样的可移植性是相当困难的。double类型. 使用64位存储一个double数值，而有些处理器使用80位浮点寄存器。这些寄存器增加了 .
May 08 2018 07:28:47,40,16,49,23,0.48,0.752,0.583,0.819,4,1,0.2476,0.4172,0.1809,0.0666,0.0286,在Java中，没有幂运算，因此需要借助于Math类的pow方法。语句：. [.]. 将y的值设置为x的a次幂（x a ）。pow方法有两个double类型的参数，其返回结果也为double. 类型。
May 08 2018 07:29:00,34,16,41,23,0.57,0.758,0.582,0.819,4,1,0.2418,0.4177,0.1809,0.0609,0.0258,（通常，将运算符放在赋值号的左侧，如*= 或 %=。）. 注释：可移植性是Java语言的设计目标之一。无论在哪个虚拟机上运行，同一运算应该得. 到同样的结果。对于浮点数的算术运算，实现这样的可移植性是相当困难的。double类型. 使用64位存储一个double数值，而有些处理器使用80位浮点寄存器。这些寄存器增加了 .
May 08 2018 07:29:10,30,5,12,33,2.74,0.985,0.984,0.984,4,1,0.0149,0.0156,0.0156,-0.0007,0.0000,（通常，将运算符放在赋值号的左侧，如*= 或 %=。）. 注释：可移植性是Java语言的设计目标之一。无论在哪个虚拟机上运行，同一运算应该得. 到同样的结果。对于浮点数的算术运算，实现这样的可移植性是相当困难的。double类型. 使用64位存储一个double数值，而有些处理器使用80位浮点寄存器。这些寄存器增加了 .
May 08 2018 07:29:29,8,10,22,36,1.62,0.957,0.944,0.944,4,1,0.043,0.0558,0.0558,-0.0128,-0.0013,3.5 运算符. 在Java中，使用算术运算符＋、－、*、/ 表示加、减、乘、除运算。当参与 / 运算的两个. 操作数都是整数时，表示整数除法；否则，表示浮点除法。整数的求余操作（有时称为取模）. 用%表示。例如，15/2等于7，15%2等于1，15.0/2等于7.5。 .
May 12 2018 09:07:05,78,3,5,6,1.15,0.86,0.881,0.881,4,1,0.1397,0.1194,0.1194,0.0204,0.0053,直接关联
May 12 2018 09:07:19,94,3,6,1,0.17,0.877,0.881,0.881,1,0,0.8766,0.8806,0.8806,-0.004,-0.0071,继承
May 12 2018 09:07:26,42,3,6,6,0.96,0.916,0.881,0.881,4,1,0.0841,0.1193,0.1193,-0.0352,-0.0072,Math类提供了一些常用的三角函数：. Math.sin. Math.cos. Math.tan. Math.atan. Math.atan2. 还有指数函数以及它的反函数――自然对数：. [.]. 最后，Java还提供了两个用于表示π和e常量的近似值：. Math.PI. Math.E. 提示：从JDK 5 .
May 13 2018 08:24:12,142,3,6,9,1.51,0.958,0.938,0.943,4,1,0.0418,0.0621,0.0568,-0.015,-0.0015,float
May 13 2018 08:24:17,94,1,2,2,1.25,0.982,0.903,0.903,4,1,0.0183,0.0972,0.0972,-0.0789,-0.0091,继承
May 13 2018 08:24:21,143,3,6,9,1.51,0.959,0.938,0.943,4,1,0.0414,0.0622,0.0568,-0.0155,-0.0015,double
May 13 2018 08:24:24,139,3,6,9,1.51,0.959,0.938,0.943,4,1,0.0414,0.0622,0.0568,-0.0154,-0.0015,byte
May 13 2018 08:24:28,137,3,6,9,1.51,0.959,0.938,0.943,4,1,0.0414,0.0622,0.0568,-0.0154,-0.0015,int
May 13 2018 08:24:31,83,3,6,9,1.51,0.959,0.938,0.943,4,1,0.0415,0.0622,0.0568,-0.0154,-0.0015,short
May 13 2018 08:24:34,138,3,6,9,1.51,0.958,0.938,0.943,4,1,0.0415,0.0622,0.0568,-0.0153,-0.0015,long
May 13 2018 08:24:47,46,5,6,1,0.17,0.746,0.882,0.882,2,0,0.7463,0.8824,0.8824,-0.1361,-0.2217,Math类提供了一些常用的三角函数：. Math.sin. Math.cos. Math.tan. Math.atan. Math.atan2. 还有指数函数以及它的反函数――自然对数：. Math.exp. Math.log. 最后，Java还提供了两个用于表示π和e常量的近似值：. Math.PI. Math.E. 提示：从JDK 5 .
May 13 2018 08:25:28,80,3,6,11,1.88,0.958,0.915,0.917,4,1,0.0416,0.085,0.0832,-0.0417,-0.0052,如果想对浮点数进行舍入运算 ， 以便得到最接近的整数 （ 在很多情况下 ， 这种操作更有用 )， 那就需要使用(?)方法
May 14 2018 06:46:31,148,3,6,13,2.19,0.958,0.907,0.917,4,1,0.0416,0.0934,0.0832,-0.0416,-0.0052,6.3 . 2 lambda 表达式的语法. Java 是一种强类型语言 ，所以我们还要指定它们的类型 ：. (String first_String second) -> first.length() - second.length();. 如果代码要完成的计算无法放在一个表达式中， 就可以像写方法一样 ， 把这些代码放在 { }中 .
May 14 2018 06:46:37,46,1,2,2,1.18,0.982,0.906,0.906,4,1,0.0182,0.0935,0.0935,-0.0753,-0.0084,Math类提供了一些常用的三角函数：. Math.sin. Math.cos. Math.tan. Math.atan. Math.atan2. 还有指数函数以及它的反函数――自然对数：. Math.exp. Math.log. 最后，Java还提供了两个用于表示π和e常量的近似值：. Math.PI. Math.E. 提示：从JDK 5 .
May 15 2018 05:35:34,94,2,3,4,1.34,0.905,0.912,0.912,4,1,0.0955,0.0878,0.0878,0.0077,0.0014,继承
May 15 2018 11:42:09,45,6,13,24,1.83,0.768,0.904,0.904,4,1,0.2316,0.096,0.096,0.1356,0.0444,Math类提供了一些常用的三角函数：. Math.sin. Math.cos. Math.tan. Math.atan. Math.atan2. 还有指数函数以及它的反函数――自然对数：. Math.exp. Math.log. 最后，Java还提供了两个用于表示π和e常量的近似值：. Math.PI. Math.E. 提示：从JDK 5 .
May 15 2018 11:42:44,23,7,19,24,1.28,0.969,0.963,0.963,4,1,0.031,0.0373,0.0373,-0.0063,-0.0004,? int compareTo(String other). 按照字典顺序，如果字符串位于other之前，返回一个负数；如果字符串位于other之后，. 返回一个正数；如果两个字符串相等，返回0。. ? boolean endsWith(String suffix). [.]. ? boolean equals(Object other) .
May 15 2018 11:42:51,70,7,24,28,1.16,0.975,0.972,0.972,4,1,0.0253,0.0278,0.0278,-0.0025,-0.0001,[.]. 返回一个新字符串。这个字符串用newString代替原始字符串中所有的oldString。可以用. String或StringBuilder对象作为CharSequence参数。
May 15 2018 11:44:22,69,7,23,25,1.07,0.988,0.968,0.968,4,1,0.0117,0.0316,0.0316,-0.0199,-0.0009,? int compareTo(String other). 按照字典顺序，如果字符串位于other之前，返回一个负数；如果字符串位于other之后，. 返回一个正数；如果两个字符串相等，返回0。. ? boolean endsWith(String suffix). 如果字符串以suffix结尾，返回true。. ? boolean .
May 15 2018 11:45:00,51,7,19,24,1.28,0.969,0.963,0.963,4,1,0.031,0.0374,0.0374,-0.0063,-0.0004,3.6.3 不可变字符串. String类没有提供用于修改字符串的方法。如果希望将greeting的内容修改为“Help!”，不. 能直接地将greeting的最后两个位置的字符修改为‘p’和‘!’。. 如何修改这个字符串呢？在Java中实现这项操作非常容易。首先提取需要的字符，. 然后再拼接上替换的字符串： .
May 15 2018 11:45:05,83,2,9,9,1.02,0.974,0.973,0.973,4,1,0.0257,0.027,0.027,-0.0014,-0.0001,short
May 15 2018 11:45:08,142,2,9,9,1.02,0.974,0.973,0.973,4,1,0.0257,0.0271,0.0271,-0.0014,-0.0001,float
May 15 2018 11:46:33,67,7,22,25,1.12,0.988,0.968,0.968,4,1,0.0123,0.0316,0.0316,-0.0193,-0.0008,? int compareTo(String other). 按照字典顺序，如果字符串位于other之前，返回一个负数；如果字符串位于other之后，. 返回一个正数；如果两个字符串相等，返回0。. ? boolean endsWith(String suffix). 如果字符串以suffix结尾，返回true。. ? boolean .
May 15 2018 11:46:58,41,7,27,33,1.21,0.992,0.976,0.976,4,1,0.0081,0.0237,0.0237,-0.0156,-0.0005,Math类提供了一些常用的三角函数：. [.]. 还有指数函数以及它的反函数――自然对数：. Math.exp. Math.log. 最后，Java还提供了两个用于表示π和e常量的近似值：. Math.PI. Math.E. 提示：从JDK 5.0开始，不必在数学方法名和常量名前添加前缀“Math.”，而只要在源文. 件的顶部加上下列内容就可以了。 .
May 15 2018 11:47:02,73,7,23,25,1.07,0.988,0.968,0.968,4,1,0.0117,0.0316,0.0316,-0.0199,-0.0009,? String replace(CharSequence oldString_ CharSequence newString). 返回一个新字符串。这个字符串用newString代替原始字符串中所有的oldString。可以用. String或StringBuilder对象作为CharSequence参数。. ? boolean .
May 15 2018 11:47:43,50,7,22,25,1.12,0.988,0.968,0.968,4,1,0.0117,0.0316,0.0316,-0.0199,-0.0009,3.6.3 不可变字符串. String类没有提供用于修改字符串的方法。如果希望将greeting的内容修改为“Help!”，不. 能直接地将greeting的最后两个位置的字符修改为‘p’和‘!’。. 如何修改这个字符串呢？在Java中实现这项操作非常容易。首先提取需要的字符，. 然后再拼接上替换的字符串：. [.] .
May 15 2018 11:48:06,143,2,9,9,1.02,0.974,0.973,0.973,4,1,0.0257,0.0271,0.0271,-0.0014,-0.0001,double
May 15 2018 11:48:25,53,7,22,25,1.12,0.988,0.968,0.968,4,1,0.0117,0.0316,0.0316,-0.0199,-0.0009,3.6.4 检测字符串是否相等. 可以使用equals方法检测两个字符串是否相等。对于表达式：. [.]. 如果字符串s与字符串t相等，则返回true；否则，返回false。需要注意，s与t可以是字符串变量，. 也可以是字符串常量。例如，下列表达式是合法的 .
May 15 2018 11:48:48,68,7,7,1,0.14,0.973,0.976,0.976,2,0,0.9731,0.9764,0.9764,-0.0033,-0.0065,? int compareTo(String other). 按照字典顺序，如果字符串位于other之前，返回一个负数；如果字符串位于other之后，. 返回一个正数；如果两个字符串相等，返回0。. ? boolean endsWith(String suffix). 如果字符串以suffix结尾，返回true。. ? boolean .
May 15 2018 11:48:53,138,2,9,9,1.02,0.974,0.973,0.973,4,1,0.0257,0.0271,0.0271,-0.0014,-0.0001,long
May 15 2018 11:50:12,57,7,20,31,1.54,0.903,0.94,0.94,4,1,0.0974,0.0605,0.0605,0.0369,0.0058,3.6.4 检测字符串是否相等. 可以使用equals方法检测两个字符串是否相等。对于表达式：. 如果字符串s与字符串t相等，则返回true；否则，返回false。需要注意，s与t可以是字符串变量，. 也可以是字符串常量。例如，下列表达式是合法的:. 要想检测两个字符串是否相等，而不区分大小写，可以使用equalsIgnoreCase方法。 .
May 15 2018 11:50:18,43,7,24,25,1.05,0.969,0.959,0.959,4,1,0.031,0.0414,0.0414,-0.0104,-0.0008,Math类提供了一些常用的三角函数：. Math.sin. Math.cos. Math.tan. Math.atan. Math.atan2. 还有指数函数以及它的反函数――自然对数：. Math.exp. Math.log. 最后，Java还提供了两个用于表示π和e常量的近似值：. [.]. 提示：从JDK 5 .
May 15 2018 11:50:46,126,5,12,21,1.76,0.932,0.849,0.885,4,1,0.0676,0.1512,0.1154,-0.0478,-0.0088,如果想对浮点数进行舍入运算 ， 以便得到最接近的整数 （ 在很多情况下 ， 这种操作更有用 )， 那就需要使用 Math.round方法 ：. double x = 9.997 ;. int nx = (int)Math.round(x);. 现在 ， 变量 nx 的值为 10。当调用 round 的时候 ， 仍然需要使用强制类型转换 ( int .
May 15 2018 11:51:22,39,7,26,33,1.25,0.992,0.976,0.976,4,1,0.0085,0.0237,0.0237,-0.0152,-0.0005,3.5.4 数学函数与常量. 在Math类中，包含了各种各样的数学函数。在编写不同类别的程序时，可能需要的函数也. 不同。. 要想计算一个数值的平方根，可以使用sqrt方法：. [.]. 注释：println方法和sqrt方法存在微小的差异。println方法操作一个定义在System类中的. System .
May 15 2018 11:52:49,131,5,23,21,0.92,0.932,0.849,0.885,4,1,0.0676,0.1505,0.1154,-0.0478,-0.0088,要想对文件进行读取， 就需要一个用 File 对象构造一个 Scanner 对象 ， 如下所示 ：. Scanner in = new Scanner(Paths.get (_myflle.txt_)__UTF-8_);. 如果文件名中包含反斜杠符号， 就要记住在每个反斜杠之前再加一个额外的反斜杠 ：. _c:\\mydirectory .
May 15 2018 11:53:35,132,5,6,1,0.17,0.931,0.849,0.885,2,0,0.9305,0.8494,0.8846,0.046,0.0834,要想写入文件， 就需要构造一个[.]。 在构造器中， 只需要提供文件名 ：. PrintWriter out = new Printlulriter(_myfile.txt___UTF-8_) ;. 如果文件不存在， 创建该文件 。 可以像输出到 System . out ― 样使用 print 、 println及 printf命令。. 文件位于 .
May 15 2018 11:53:39,139,2,9,9,1.02,0.974,0.973,0.973,4,1,0.0257,0.0271,0.0271,-0.0014,-0.0001,byte
May 15 2018 11:53:50,62,6,14,24,1.7,0.768,0.904,0.904,4,1,0.2316,0.0957,0.0957,0.1358,0.0445,[.]. 按照字典顺序，如果字符串位于other之前，返回一个负数；如果字符串位于other之后，. 返回一个正数；如果两个字符串相等，返回0。
May 15 2018 11:53:58,65,7,27,33,1.21,0.979,0.976,0.976,4,1,0.0208,0.0236,0.0236,-0.0029,-0.0001,? int compareTo(String other). 按照字典顺序，如果字符串位于other之前，返回一个负数；如果字符串位于other之后，. 返回一个正数；如果两个字符串相等，返回0。. [.]. 如果字符串以suffix结尾，返回true。. ? boolean equals(Object other) .
May 15 2018 11:54:31,118,5,6,1,0.17,0.928,0.848,0.885,2,0,0.9283,0.8484,0.8846,0.0438,0.0794,3.5.2 数值类型之间的转换. 经常需要将一种数值类型转换为另一种数值类型 。 图 3-1 给出了数值类型之间的合法转换 。. 在图 3 - 1 中有 6 个实心箭头 ，表示无信息丢失的转换 ； 有 3 个虚箭头 ， 表示可能有精度损失的转换。 例如，123456 789 是一个大整数，它所包含的位数比 float .
May 15 2018 11:54:37,42,3,7,6,0.86,0.965,0.915,0.915,4,1,0.0345,0.0848,0.0848,-0.0502,-0.006,Math类提供了一些常用的三角函数：. Math.sin. Math.cos. Math.tan. Math.atan. Math.atan2. 还有指数函数以及它的反函数――自然对数：. [.]. 最后，Java还提供了两个用于表示π和e常量的近似值：. Math.PI. Math.E. 提示：从JDK 5 .
May 15 2018 11:56:04,125,5,29,21,0.73,0.928,0.849,0.885,4,1,0.0715,0.1514,0.1154,-0.0439,-0.0082,如果想对浮点数进行舍入运算 ， 以便得到最接近的整数 （ 在很多情况下 ， 这种操作更有用 )， 那就需要使用 Math.round方法 ：. double x = 9.997 ;. int nx = (int)Math.round(x);. 现在 ， 变量 nx 的值为 10。当调用 round 的时候 ， 仍然需要使用强制类型转换 ( int .
May 15 2018 11:56:17,80,2,11,15,1.41,0.974,0.984,0.984,4,1,0.0257,0.0155,0.0155,0.0102,0.0004,如果想对浮点数进行舍入运算 ， 以便得到最接近的整数 （ 在很多情况下 ， 这种操作更有用 )， 那就需要使用(?)方法
May 15 2018 11:57:17,46,1,2,2,1.17,0.951,0.941,0.941,4,1,0.0489,0.0586,0.0586,-0.0096,-0.001,Math类提供了一些常用的三角函数：. Math.sin. Math.cos. Math.tan. Math.atan. Math.atan2. 还有指数函数以及它的反函数――自然对数：. Math.exp. Math.log. 最后，Java还提供了两个用于表示π和e常量的近似值：. Math.PI. Math.E. 提示：从JDK 5 .
May 15 2018 11:57:32,145,4,6,1,0.17,0.939,0.867,0.898,1,0,0.9391,0.8671,0.8985,0.0406,0.0746,for each循环的一个细节。
May 15 2018 11:57:58,147,4,12,20,1.7,0.941,0.867,0.898,4,1,0.0592,0.1328,0.1015,-0.0423,-0.0068,静态导入
May 15 2018 11:58:12,81,6,14,24,1.71,0.74,0.904,0.904,4,1,0.2599,0.0964,0.0964,0.1636,0.0583,3.9 大数值. 如果基本的整数和浮点数精度不能够满足需求，那么可以使用java.math包中的两个很有用. 的类：BigInteger和BigDecimal。这两个类可以处理包含任意长度数字序列的数值。BigInteger. 类实现了任意精度的整数运算，BigDecimal实现了任意精度的浮点数运算。 .
May 15 2018 11:58:28,79,7,22,25,1.12,0.984,0.968,0.968,3,1,0.0158,0.0316,0.0316,-0.0158,-0.0008,3.9 大数值. 如果基本的整数和浮点数精度不能够满足需求，那么可以使用java.math包中的两个很有用. 的类：BigInteger和BigDecimal。这两个类可以处理包含任意长度数字序列的数值。[.]类实现了任意精度的整数运算，BigDecimal实现了任意精度的浮点数运算。. 使用静态的valueOf方法可以将普通的数值转换为大数值： .
May 15 2018 11:58:31,137,2,9,9,1.02,0.974,0.973,0.973,4,1,0.0257,0.0272,0.0272,-0.0015,-0.0001,int
May 15 2018 11:58:49,74,7,6,1,0.17,0.988,0.968,0.968,2,0,0.9883,0.9683,0.9683,0.02,0.0391,[.]. 返回一个新字符串。这个字符串将原始字符串中的所有大写字母改成了小写字母。
May 15 2018 11:59:28,82,7,21,25,1.17,0.978,0.968,0.968,4,1,0.0221,0.0316,0.0316,-0.0095,-0.0005,3.9 大数值. 如果基本的整数和浮点数精度不能够满足需求，那么可以使用java.math包中的两个很有用. 的类：BigInteger和BigDecimal。这两个类可以处理包含任意长度数字序列的数值。BigInteger. 类实现了任意精度的整数运算，BigDecimal实现了任意精度的浮点数运算。 .
May 15 2018 11:59:34,72,7,23,25,1.07,0.988,0.968,0.968,4,1,0.0117,0.0317,0.0317,-0.02,-0.0009,? String replace(CharSequence oldString_ CharSequence newString). 返回一个新字符串。这个字符串用newString代替原始字符串中所有的oldString。可以用. String或StringBuilder对象作为CharSequence参数。. [.] .
May 15 2018 11:59:40,63,6,14,24,1.7,0.768,0.904,0.904,4,1,0.2316,0.0959,0.0959,0.1357,0.0444,? int compareTo(String other). [.]返回一个正数；如果两个字符串相等，返回0。. ? boolean endsWith(String suffix). 如果字符串以suffix结尾，返回true。. ? boolean equals(Object other). 如果字符串与other相等，返回true。. ? .
May 15 2018 11:59:45,75,7,22,25,1.12,0.988,0.968,0.968,4,1,0.0123,0.0317,0.0317,-0.0193,-0.0009,? String toLowerCase( ). [.]
May 15 2018 11:59:55,44,7,26,33,1.25,0.992,0.976,0.976,4,1,0.0085,0.0237,0.0237,-0.0152,-0.0005,Math类提供了一些常用的三角函数：. Math.sin. Math.cos. Math.tan. Math.atan. Math.atan2. 还有指数函数以及它的反函数――自然对数：. Math.exp. Math.log. 最后，Java还提供了两个用于表示π和e常量的近似值：. Math.PI. Math.E. 提示：从JDK 5 .
May 15 2018 12:00:09,66,7,22,25,1.12,0.988,0.968,0.968,4,1,0.0123,0.0316,0.0316,-0.0193,-0.0008,? int compareTo(String other). 按照字典顺序，如果字符串位于other之前，返回一个负数；如果字符串位于other之后，. 返回一个正数；如果两个字符串相等，返回0。. ? boolean endsWith(String suffix). 如果字符串以suffix结尾，返回true。. [.] .
May 15 2018 12:00:14,54,7,23,25,1.07,0.988,0.968,0.968,4,1,0.0117,0.0317,0.0317,-0.02,-0.0009,? String toUpperCase( ). [.]
May 15 2018 12:00:24,55,7,27,31,1.14,0.828,0.952,0.952,4,1,0.1723,0.0483,0.0483,0.124,0.0274,[.]. 返回一个新字符串。这个字符串将原始字符串中的所有小写字母改成了大写字母。
May 15 2018 12:00:28,77,6,14,24,1.7,0.768,0.904,0.904,4,1,0.2316,0.0959,0.0959,0.1357,0.0444,? String trim( ). [.]
May 15 2018 12:00:40,71,7,25,28,1.11,0.978,0.972,0.972,4,1,0.0217,0.0279,0.0279,-0.0062,-0.0003,? String replace(CharSequence oldString_ CharSequence newString). [.]
May 15 2018 12:01:46,133,5,6,1,0.17,0.924,0.849,0.885,2,0,0.9243,0.8493,0.8846,0.0397,0.0718,要想写入文件， 就需要构造一个 PrintWriter对象 。 在构造器中， 只需要提供文件名 ：. PrintWriter out = new Printlulriter(_myfile.txt___UTF-8_) ;. 如果文件不存在， 创建该文件 。 可以像输出到 System . out ― 样使用 print 、 println及 .
May 15 2018 12:02:28,134,5,35,21,0.6,0.924,0.849,0.885,4,1,0.0755,0.1507,0.1154,-0.0399,-0.0076,要想写入文件， 就需要构造一个 PrintWriter对象 。 在构造器中， 只需要提供文件名 ：. PrintWriter out = new Printlulriter(_myfile.txt___UTF-8_) ;. 如果文件不存在， 创建该文件 。 可以像输出到 System . out ― 样使用 print 、 println及 .
May 15 2018 12:02:44,76,7,22,25,1.12,0.988,0.968,0.968,3,1,0.0123,0.0317,0.0317,-0.0193,-0.0009,[.]. 返回一个新字符串。这个字符串将删除了原始字符串头部和尾部的空格。
May 15 2018 12:02:58,26,7,27,33,1.21,0.992,0.976,0.976,4,1,0.0081,0.0237,0.0237,-0.0157,-0.0005,3.4.2 常量. 在Java中，利用关键字final声明常量。例如：. 关键字final表示这个变量只能被赋值一次。习惯上，常. 量名使用大写。. 在Java中，经常希望某个常量可以在一个类中的多个方法中使用，通常将这些常量称为类. 常量。可以使用[.]设置一个类常量。下面是使用类常量的示例：. 36 第 3 章. Java 基本的程序设计结构 .
May 15 2018 12:03:15,150,4,32,20,0.63,0.939,0.869,0.898,4,1,0.0607,0.1314,0.1015,-0.0408,-0.0066,6.3 . 2 lambda 表达式的语法. Java 是一种强类型语言 ，所以我们还要指定它们的类型 ：. (String first_String second) -> first.length() - second.length();. 如果代码要完成的计算无法放在一个表达式中，[.]
May 15 2018 12:03:21,149,4,14,20,1.44,0.939,0.869,0.898,4,1,0.0607,0.1314,0.1015,-0.0408,-0.0066,6.3 . 2 lambda 表达式的语法. Java 是一种强类型语言 ，所以我们还要指定它们的类型 ：. (String first_String second) -> first.length() - second.length();. 如果代码要完成的计算无法放在一个表达式中， 就可以像写方法一样 ， 把这些代码放在 { }中 .
May 15 2018 12:03:34,6,7,27,33,1.21,0.992,0.976,0.976,3,1,0.0081,0.0237,0.0237,-0.0157,-0.0005,3.4.2 常量. 在Java中，利用关键字final声明常量。例如：. 关键字final表示[.]。一旦被赋值之后，就不能够再更改了。习惯上，常. 量名使用大写。. 在Java中，经常希望某个常量可以在一个类中的多个方法中使用，通常将这些常量称为类. 常量。可以使用关键字static final设置一个类常量。下面是使用类常量的示例：. 36 第 .
May 15 2018 12:03:41,25,6,14,24,1.7,0.768,0.904,0.904,4,1,0.2316,0.096,0.096,0.1355,0.0444,3.4.2 常量. 在Java中，利用关键字final声明常量。例如：. 关键字final表示这个变量只能被赋值一次。习惯上，常. 量名使用大写。. 在Java中，经常希望某个常量可以[.]，通常将这些常量称为类. 常量。可以使用关键字static final设置一个类常量。下面是使用类常量的示例：. 36 第 3 章. Java .
May 16 2018 06:40:26,93,7,18,27,1.48,0.704,0.892,0.892,4,1,0.2962,0.1081,0.1081,0.1881,0.076,2.2.4在活动中使用 Toast. Toast是Android系统提供的一种非常好的提醒方式，在程序中可以使用它将一些短小的信息. 通知给用户，这些信息会在一段时间后自动消失，并且不会占用任何屏幕空间，我们现在就尝试. 一下如何在活动中使用Toast。. 首先需要定义一个弹出Toast的触发点，正好界面上有个按钮，那我们就让点击这个按钮的 .
May 16 2018 06:40:57,132,1,2,5,2.26,0.983,0.921,0.921,4,1,0.0174,0.0792,0.0792,-0.0617,-0.006,要想写入文件， 就需要构造一个[.]。 在构造器中， 只需要提供文件名 ：. PrintWriter out = new Printlulriter(_myfile.txt___UTF-8_) ;. 如果文件不存在， 创建该文件 。 可以像输出到 System . out ― 样使用 print 、 println及 printf命令。. 文件位于 .
May 16 2018 06:41:09,74,1,2,2,0.92,0.983,0.921,0.921,4,1,0.0173,0.0788,0.0788,-0.0616,-0.0059,[.]. 返回一个新字符串。这个字符串将原始字符串中的所有大写字母改成了小写字母。
May 16 2018 06:41:34,68,1,2,2,0.93,0.983,0.92,0.92,4,1,0.0171,0.0795,0.0795,-0.0624,-0.006,? int compareTo(String other). 按照字典顺序，如果字符串位于other之前，返回一个负数；如果字符串位于other之后，. 返回一个正数；如果两个字符串相等，返回0。. ? boolean endsWith(String suffix). 如果字符串以suffix结尾，返回true。. ? boolean .
May 16 2018 06:42:20,133,1,2,4,2.24,0.983,0.921,0.921,4,1,0.017,0.0787,0.0787,-0.0617,-0.0059,要想写入文件， 就需要构造一个 PrintWriter对象 。 在构造器中， 只需要提供文件名 ：. PrintWriter out = new Printlulriter(_myfile.txt___UTF-8_) ;. 如果文件不存在， 创建该文件 。 可以像输出到 System . out ― 样使用 print 、 println及 .
May 16 2018 06:42:42,145,1,2,5,2.26,0.983,0.921,0.921,4,1,0.0168,0.079,0.079,-0.0622,-0.006,for each循环的一个细节。
May 16 2018 06:42:52,118,1,2,5,2.27,0.983,0.921,0.921,4,1,0.0166,0.0792,0.0792,-0.0626,-0.006,3.5.2 数值类型之间的转换. 经常需要将一种数值类型转换为另一种数值类型 。 图 3-1 给出了数值类型之间的合法转换 。. 在图 3 - 1 中有 6 个实心箭头 ，表示无信息丢失的转换 ； 有 3 个虚箭头 ， 表示可能有精度损失的转换。 例如，123456 789 是一个大整数，它所包含的位数比 float .
May 16 2018 06:43:25,19,7,12,27,2.22,0.735,0.892,0.892,3,1,0.2646,0.1079,0.1079,0.1567,0.0584,写可读的代码注释不但没能让代码变得可读，反而由于大量的注释充斥在代码中间，让程序变得障眼难读。而且代码的逻辑一旦修改，就会有很多的注释变得过时，需要更新。修改注释是相当大的负担，所以大量的注释。 .
