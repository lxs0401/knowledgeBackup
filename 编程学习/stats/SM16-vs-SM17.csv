Date, Element No, SM16 Interval, SM17 Interval, SM17/SM16 Interval ratio, Predicted R (SM16), Predicted Exp R (SM17), Predicted Recall (SM17), Grade, Success, abs RM16, abs RM17 (expected), abs RM17 (predicted), abs R-Metric, Title,
Apr 23 2018 12:50:59,8,3,5,1.54,0.916,0.984,0.984,5,1,0.0841,0.0163,0.0163,0.0678,3.5 运算符. 在Java中，使用算术运算符＋、－、*、/ 表示加、减、乘、除运算。当参与 / 运算的两个. 操作数都是整数时，表示整数除法；否则，表示浮点除法。整数的求余操作（有时称为取模）. 用%表示。例如，15/2等于7，15%2等于1，15.0/2等于7.5。 .
Apr 24 2018 12:31:58,30,5,9,1.76,0.839,0.959,0.959,4,1,0.161,0.0415,0.0415,0.1196,（通常，将运算符放在赋值号的左侧，如*= 或 %=。）. 注释：可移植性是Java语言的设计目标之一。无论在哪个虚拟机上运行，同一运算应该得. 到同样的结果。对于浮点数的算术运算，实现这样的可移植性是相当困难的。double类型. 使用64位存储一个double数值，而有些处理器使用80位浮点寄存器。这些寄存器增加了 .
Apr 28 2018 16:32:11,42,21,35,1.66,0.59,0.859,0.859,4,1,0.4095,0.1406,0.1406,0.2689,Math类提供了一些常用的三角函数：. Math.sin. Math.cos. Math.tan. Math.atan. Math.atan2. 还有指数函数以及它的反函数――自然对数：. [.]. 最后，Java还提供了两个用于表示π和e常量的近似值：. Math.PI. Math.E. 提示：从JDK 5 .
Apr 28 2018 16:32:19,8,15,22,1.45,0.902,0.974,0.974,4,1,0.0981,0.0259,0.0259,0.0723,3.5 运算符. 在Java中，使用算术运算符＋、－、*、/ 表示加、减、乘、除运算。当参与 / 运算的两个. 操作数都是整数时，表示整数除法；否则，表示浮点除法。整数的求余操作（有时称为取模）. 用%表示。例如，15/2等于7，15%2等于1，15.0/2等于7.5。 .
4月 29 2018 11:12:42,68,5,9,1.81,0.839,0.957,0.957,4,1,0.161,0.0427,0.0427,0.1183,? int compareTo(String other). 按照字典顺序，如果字符串位于other之前，返回一个负数；如果字符串位于other之后，. 返回一个正数；如果两个字符串相等，返回0。. ? boolean endsWith(String suffix). 如果字符串以suffix结尾，返回true。. ? boolean .
4月 29 2018 11:12:49,65,5,9,1.81,0.839,0.957,0.957,4,1,0.161,0.0427,0.0427,0.1183,? int compareTo(String other). 按照字典顺序，如果字符串位于other之前，返回一个负数；如果字符串位于other之后，. 返回一个正数；如果两个字符串相等，返回0。. [.]. 如果字符串以suffix结尾，返回true。. ? boolean equals(Object other) .
Apr 30 2018 16:13:43,70,10,19,1.86,0.768,0.927,0.927,4,1,0.2316,0.0726,0.0726,0.159,[.]. 返回一个新字符串。这个字符串用newString代替原始字符串中所有的oldString。可以用. String或StringBuilder对象作为CharSequence参数。
Apr 30 2018 16:13:56,71,10,19,1.86,0.768,0.927,0.927,4,1,0.2316,0.0726,0.0726,0.159,? String replace(CharSequence oldString_ CharSequence newString). [.]
May 02 2018 11:56:32,51,17,31,1.85,0.645,0.884,0.884,4,1,0.3553,0.1165,0.1165,0.2389,3.6.3 不可变字符串. String类没有提供用于修改字符串的方法。如果希望将greeting的内容修改为“Help!”，不. 能直接地将greeting的最后两个位置的字符修改为‘p’和‘!’。. 如何修改这个字符串呢？在Java中实现这项操作非常容易。首先提取需要的字符，. 然后再拼接上替换的字符串： .
May 02 2018 11:56:53,23,17,31,1.85,0.645,0.884,0.884,4,1,0.3553,0.1162,0.1162,0.2392,? int compareTo(String other). 按照字典顺序，如果字符串位于other之前，返回一个负数；如果字符串位于other之后，. 返回一个正数；如果两个字符串相等，返回0。. ? boolean endsWith(String suffix). [.]. ? boolean equals(Object other) .
May 02 2018 11:57:06,43,34,27,0.8,0.416,0.777,0.777,4,1,0.5844,0.2226,0.2226,0.3618,Math类提供了一些常用的三角函数：. Math.sin. Math.cos. Math.tan. Math.atan. Math.atan2. 还有指数函数以及它的反函数――自然对数：. Math.exp. Math.log. 最后，Java还提供了两个用于表示π和e常量的近似值：. [.]. 提示：从JDK 5 .
May 02 2018 11:57:21,22,38,25,0.65,0.381,0.756,0.756,4,1,0.6193,0.2441,0.2441,0.3752,写可读的代码注释不但没能让代码变得可读，反而由于大量的注释充斥在代码中间，让程序变得障眼难读。而且代码的逻辑一旦修改，就会有很多的注释变得过时，需要更新。修改注释是相当大的负担，所以大量的注释。 .
May 02 2018 11:57:42,13,38,25,0.65,0.381,0.756,0.756,4,1,0.6193,0.2443,0.2443,0.3751,写模块化的代码有些人吵着闹着要让程序“模块化”，结果他们的做法是把代码分部到多个文件和目录里面，然后把这些目录或者文件叫做“module”。他们甚至把这些目录分放在不同的VCS r .
May 03 2018 13:39:25,30,23,30,1.31,0.886,0.968,0.968,4,1,0.1145,0.0322,0.0322,0.0823,（通常，将运算符放在赋值号的左侧，如*= 或 %=。）. 注释：可移植性是Java语言的设计目标之一。无论在哪个虚拟机上运行，同一运算应该得. 到同样的结果。对于浮点数的算术运算，实现这样的可移植性是相当困难的。double类型. 使用64位存储一个double数值，而有些处理器使用80位浮点寄存器。这些寄存器增加了 .
May 09 2018 11:38:24,93,2,7,3.68,0.932,0.883,0.883,4,1,0.0678,0.1166,0.1166,-0.0487,2.2.4在活动中使用 Toast. Toast是Android系统提供的一种非常好的提醒方式，在程序中可以使用它将一些短小的信息. 通知给用户，这些信息会在一段时间后自动消失，并且不会占用任何屏幕空间，我们现在就尝试. 一下如何在活动中使用Toast。. 首先需要定义一个弹出Toast的触发点，正好界面上有个按钮，那我们就让点击这个按钮的 .
May 09 2018 11:38:30,25,2,7,3.7,0.932,0.883,0.883,4,1,0.0678,0.1172,0.1172,-0.0493,3.4.2 常量. 在Java中，利用关键字final声明常量。例如：. 关键字final表示这个变量只能被赋值一次。习惯上，常. 量名使用大写。. 在Java中，经常希望某个常量可以[.]，通常将这些常量称为类. 常量。可以使用关键字static final设置一个类常量。下面是使用类常量的示例：. 36 第 3 章. Java .
May 09 2018 11:38:44,81,2,7,3.68,0.932,0.884,0.884,4,1,0.0678,0.1164,0.1164,-0.0486,3.9 大数值. 如果基本的整数和浮点数精度不能够满足需求，那么可以使用java.math包中的两个很有用. 的类：BigInteger和BigDecimal。这两个类可以处理包含任意长度数字序列的数值。BigInteger. 类实现了任意精度的整数运算，BigDecimal实现了任意精度的浮点数运算。 .
May 09 2018 11:38:51,63,2,7,3.7,0.932,0.883,0.883,4,1,0.0678,0.1174,0.1174,-0.0495,? int compareTo(String other). [.]返回一个正数；如果两个字符串相等，返回0。. ? boolean endsWith(String suffix). 如果字符串以suffix结尾，返回true。. ? boolean equals(Object other). 如果字符串与other相等，返回true。. ? .
May 09 2018 11:38:55,78,2,3,1.41,0.943,0.884,0.884,4,1,0.0569,0.1165,0.1165,-0.0596,直接关联
May 09 2018 11:39:02,42,2,3,1.41,0.932,0.883,0.883,4,1,0.0678,0.1167,0.1167,-0.0488,Math类提供了一些常用的三角函数：. Math.sin. Math.cos. Math.tan. Math.atan. Math.atan2. 还有指数函数以及它的反函数――自然对数：. [.]. 最后，Java还提供了两个用于表示π和e常量的近似值：. Math.PI. Math.E. 提示：从JDK 5 .
May 09 2018 11:39:06,94,2,3,1.41,0.932,0.884,0.884,4,1,0.0678,0.1164,0.1164,-0.0486,继承
May 09 2018 11:39:15,62,2,7,3.7,0.932,0.883,0.883,4,1,0.0678,0.1175,0.1175,-0.0496,[.]. 按照字典顺序，如果字符串位于other之前，返回一个负数；如果字符串位于other之后，. 返回一个正数；如果两个字符串相等，返回0。
May 09 2018 11:39:19,77,2,7,3.7,0.932,0.883,0.883,4,1,0.0678,0.1173,0.1173,-0.0495,? String trim( ). [.]
May 09 2018 11:39:30,19,2,7,3.69,0.932,0.883,0.883,4,1,0.0678,0.1169,0.1169,-0.0491,写可读的代码注释不但没能让代码变得可读，反而由于大量的注释充斥在代码中间，让程序变得障眼难读。而且代码的逻辑一旦修改，就会有很多的注释变得过时，需要更新。修改注释是相当大的负担，所以大量的注释。 .
May 09 2018 11:39:51,45,2,7,3.69,0.932,0.883,0.883,4,1,0.0678,0.1168,0.1168,-0.0489,Math类提供了一些常用的三角函数：. Math.sin. Math.cos. Math.tan. Math.atan. Math.atan2. 还有指数函数以及它的反函数――自然对数：. Math.exp. Math.log. 最后，Java还提供了两个用于表示π和e常量的近似值：. Math.PI. Math.E. 提示：从JDK 5 .
